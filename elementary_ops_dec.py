# *****************************************************************************
# МОДУЛЬ:    Lib/decimal.py
# ФАЙЛ:      ELEMENTARY_OPERATIONS.PY
# ЗАГОЛОВОК: ЭЛЕМЕНТАРНЫЕ АРИФМЕТИЧЕСКИЕ ОПЕРАЦИИ ВЫСОКОЙ ТОЧНОСТИ
# ОПИСАНИЕ:  Содержит реализацию основных математических операций на языке
#            Python (сложение, вычитание, умножение, деление).
#            Операции выполнены с использованием хранения чисел в строках и
#            алгоритм выполнен таким образом что можно задать высокую точность
#            десятичной дроби (более 15 чем у стандарного double). Точность
#            ограничивается только максимально возможной длиной строки (для 
#            Python x64 это 64Гб памяти (размер строки зависит от типа кодировки))
#            Числа хранятся в обычной записи (т.е. без использования мантиссы)
# TODO       Создать проверку максимальной точности чисел
# *****************************************************************************

import decimal as dec

# реализация сложения методом в столбик (только беззнаковые числа)
# IN: A, B - строки чисел включая дробные
# IN: precision - количество десятичных цифр после запятой (по умолчанию 15),
#                 последний разряд округляется
# OUT: возвращает строку с числом
# ПРИМЕР: print(elementaryAdd("800.5158525461314613", "20.1", 13)) => 820.6158525461315
def elementaryAdd(A:str, B:str, precision:int = 15):
    # result = ""

    # защита проверки ввода параметров
    if precision < 0:
        precision = 0
    # также здесь должна быть проверка максимальной точности, иначе можно занять всю память одним числом

    # определение реальной точности для decimal
    precisionInt = precision + A.find(".") if A.find(".") > B.find(".") else precision + B.find(".")

    try:
        x = float(A) + float(B)
        print ("Тест float:  ", x)
    except:
        return "Error"

    # установка требуемой точности
    dec.getcontext().prec = precisionInt

    # Объекты чисел, над которыми проводятся действия
    numA = dec.Decimal(A)
    numB = dec.Decimal(B)

    result = numA + numB

    return str(result)


# -------------------------------------------------------------------------------------------------
def elementarySub(A:str, B:str, precision:int = 15):
	pass

# -------------------------------------------------------------------------------------------------
def elementaryMul(A:str, B:str, precision:int = 15):
	pass

# -------------------------------------------------------------------------------------------------
def elementaryDiv(A:str, B:str, precision:int = 15):
	pass


# unit-test Точночть 13
print ("ТЕСТ. Точность 13")
print("Ответ:       ", elementaryAdd("800.5158525461314613", "20.1", 13))
print("Должно быть: ", 820.6158525461315)
# unit-test Точность 16
print("ТЕСТ. Точность 16")
print("Ответ:       ", elementaryAdd("800.5158525461314613", "20.1", 16))
# unit-test Точность 20
print("ТЕСТ. Точность 20")
print("Ответ:       ", elementaryAdd("800.51585254613146130987", "20.1", 20))

print("Тесты с другим порядком чисел")
# unit-test Точночть 13
print("ТЕСТ. Точность 13")
print("Ответ:       ", elementaryAdd("20.1", "800.5158525461314613", 13))
print("Должно быть: ", 820.6158525461315)
# unit-test Точность 16
print("ТЕСТ. Точность 16")
print("Ответ:       ", elementaryAdd("20.1", "800.5158525461314613", 16))
